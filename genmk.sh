#!/bin/bash
# genmk
# generate Makefile rules for the book src..
name=$(basename $0)

ONLY_TARGET=0
[ $# -lt 2 ] && {
	echo "Usage: ${name} filename-without-.c_extension only-this-target{0|1}"
	exit 1
}
if [[ "${1}" = *"."* ]]; then
	echo "Usage: $name name-of-file ONLY (do NOT put any extension)."
	exit 1
fi
[ "$2" = "1" ] && ONLY_TARGET=1

#echo "num=$#"

#[ -f Makefile ] && ALL_LINE=$(grep "ALL *\:=" Makefile)


# Makefile beginning
MVARS_TOP="# Makefile
#  Generated by the genmk.sh utility.

ALL := $1

CC=\${CROSS_COMPILE}gcc
CL=\${CROSS_COMPILE}clang

CFLAGS=-Wall
CFLAGS_DBG=-g -ggdb -gdwarf-4 -O0 -Wall -Wextra
CFLAGS_DBG_ASAN=${CFLAGS_DBG} -fsanitize=address
CFLAGS_DBG_UB=${CFLAGS_DBG} -fsanitize=undefined

all: \${ALL}
CB_FILES := *.[ch]
"

[ ${ONLY_TARGET} -eq 0 ] && {
	echo "${MVARS_TOP}"
	echo
}

RULE="common.o: ../common.c ../common.h
	\${CC} \${CFLAGS} -c ../common.c -o common.o
common_dbg.o: ../common.c ../common.h
	\${CC} \${CFLAGS_DBG} -c ../common.c -o common_dbg.o"
[ ${ONLY_TARGET} -eq 0 ] && {
	echo "${RULE}"
	echo
}

# Makefile body
num=1
for rulename in "$@"
do
	#echo "rulename = ${rulename}"

	[ ${num} -ge $# ] && break
	RULE="
${rulename}: common.o ${rulename}.o
	\${CC} \${CFLAGS} -o ${rulename} ${rulename}.c common.o
${rulename}_dbg.o: ${rulename}.c
	\${CC} \${CFLAGS_DBG} -c ${rulename}.c -o ${rulename}_dbg.o
${rulename}_dbg: ${rulename}_dbg.o common_dbg.o
	\${CC} -o ${rulename}_dbg ${rulename}_dbg.o common_dbg.o"

	RULE_SANITZ="
	\${CL} \${CFLAGS_DBG_ASAN} -o ${rulename}_asan ${rulename}_dbg.o common_dbg.o
	\${CL} \${CFLAGS_DBG_UB} -o ${rulename}_ub ${rulename}_dbg.o common_dbg.o
	\${CL} \${CFLAGS_DBG_MSAN} -o ${rulename}_msan ${rulename}_dbg.o common_dbg.o"

	echo "${RULE}${RULE_SANITZ}"
	echo

	let num=num+1
done

# Makefile bottom

MVARS_END="# indent- \"beautifies\" C code into the \"Linux kernel style\".
# (cb = C Beautifier :) )
# Note! original source file(s) is overwritten, so we back it up.
cb: \${CB_FILES}
	mkdir bkp 2> /dev/null; cp -f \${CB_FILES} bkp/
	indent -linux \${CB_FILES}

clean:
	rm -vf \${ALL} core* vgcore* *.o *~"
[ ${ONLY_TARGET} -eq 0 ] && {
	echo "${MVARS_END}"
}

exit 0
