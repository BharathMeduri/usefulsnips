#!/bin/bash
# genmk
# generate Makefile rules for the book src..
name=$(basename $0)

usage()
{
	echo "Usage: ${name} only-this-target{0|1} filename(s)-without-.c_extension
 The first parameter should be 0 or 1; 
  0 implies : generate the complete Makefile along with the target(s)
  1 implies : generate only the specific target(s) specified Makefile snippet
 The second parameter onward are the file(s) to generate via make;
  *Ensure that you put only the file(s) name NOT any extension*
"
}

ONLY_TARGET=0
[ $# -lt 2 ] && {
	usage
	exit 1
}
[ "$1" != "0" -a "$1" != "1" ] && {
	usage
	exit 1
}
[ "$1" = "1" ] && ONLY_TARGET=1

# Check all params for a "."
for param in "$@"
do
	if [[ "${param}" = *"."* ]]; then
		echo "*** Error: do Not use any extension or \".\", thank you! ***"
		usage
		exit 1
	fi
done
#echo "num=$#"

#[ -f Makefile ] && ALL_LINE=$(grep "ALL *\:=" Makefile)


# Makefile beginning
MVARS_TOP="# Makefile
#  Generated by the genmk.sh utility.

ALL := $1

CC=\${CROSS_COMPILE}gcc
CL=\${CROSS_COMPILE}clang

CFLAGS=-Wall
CFLAGS_DBG=-g -ggdb -gdwarf-4 -O0 -Wall -Wextra
CFLAGS_DBG_ASAN=${CFLAGS_DBG} -fsanitize=address
CFLAGS_DBG_UB=${CFLAGS_DBG} -fsanitize=undefined

all: \${ALL}
CB_FILES := *.[ch]
"

[ ${ONLY_TARGET} -eq 0 ] && {
	echo "${MVARS_TOP}"
	echo
}

RULE="common.o: ../common.c ../common.h
	\${CC} \${CFLAGS} -c ../common.c -o common.o
common_dbg.o: ../common.c ../common.h
	\${CC} \${CFLAGS_DBG} -c ../common.c -o common_dbg.o"
[ ${ONLY_TARGET} -eq 0 ] && {
	echo "${RULE}"
	echo
}

# Makefile body
num=1
for rulename in "$@"
do
	#echo "rulename = ${rulename}"

	[ ${num} -eq 1 ] && {
		let num=num+1
		continue
	}
	#[ ${num} -ge $# ] && break

	RULE="
${rulename}: common.o ${rulename}.o
	\${CC} \${CFLAGS} -o ${rulename} ${rulename}.c common.o
${rulename}_dbg.o: ${rulename}.c
	\${CC} \${CFLAGS_DBG} -c ${rulename}.c -o ${rulename}_dbg.o
${rulename}_dbg: ${rulename}_dbg.o common_dbg.o
	\${CC} -o ${rulename}_dbg ${rulename}_dbg.o common_dbg.o"

	RULE_SANITZ="
	\${CL} \${CFLAGS_DBG_ASAN} -o ${rulename}_asan ${rulename}_dbg.o common_dbg.o
	\${CL} \${CFLAGS_DBG_UB} -o ${rulename}_ub ${rulename}_dbg.o common_dbg.o
	\${CL} \${CFLAGS_DBG_MSAN} -o ${rulename}_msan ${rulename}_dbg.o common_dbg.o"

	echo "${RULE}${RULE_SANITZ}"
	echo

	let num=num+1
done

# Makefile bottom

MVARS_END="# indent- \"beautifies\" C code into the \"Linux kernel style\".
# (cb = C Beautifier :) )
# Note! original source file(s) is overwritten, so we back it up.
cb: \${CB_FILES}
	mkdir bkp 2> /dev/null; cp -f \${CB_FILES} bkp/
	indent -linux \${CB_FILES}

clean:
	rm -vf \${ALL} core* vgcore* *.o *~"
[ ${ONLY_TARGET} -eq 0 ] && {
	echo "${MVARS_END}"
}

exit 0
